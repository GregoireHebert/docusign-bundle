name: CI

on:
  schedule:
    - cron: 0 2 * * 1-5
  pull_request:

jobs:
  tests:
    name: Tests PHP ${{ matrix.php }} ${{ matrix.dependency }}
    runs-on: ubuntu-latest
    container:
      image: php:${{ matrix.php }}
    strategy:
      # https://github.community/t5/GitHub-Actions/GitHub-Actions-Matrix-options-dont-work-as-documented/m-p/29558
      matrix:
        php:
          - '7.2'
          - '7.3'
        dependency:
          - ''
          - 'lowest'
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Install system packages
        run: |
          apt-get update
          apt-get install -y --no-install-recommends \
            unzip \
            libzip-dev \
            chromium
          docker-php-ext-install zip

      - name: Disable PHP memory limit
        run: echo 'memory_limit=-1' >> /usr/local/etc/php/php.ini

      - name: Install Composer
        run: curl -sS -o - https://raw.githubusercontent.com/composer/getcomposer.org/ba13e3fc70f1c66250d1ea7ea4911d593aa1dba5/web/installer | php -- --install-dir=/usr/local/bin --filename=composer --quiet

      - name: Update project dependencies
        if: matrix.dependency == ''
        run: composer update --no-progress --no-suggest --ansi

      - name: Update project dependencies lowest
        if: matrix.dependency == 'lowest'
        run: |
          composer remove --dev --no-progress --no-update --ansi league/flysystem-bundle
          composer update --no-progress --no-suggest --ansi --prefer-lowest

      - name: Run phpstan tests
        if: matrix.dependency == ''
        run: vendor/bin/phpstan analyze

      - name: Run phpstan tests lowest
        if: matrix.dependency == 'lowest'
        run: vendor/bin/phpstan analyze -c phpstan.neon.lowest.dist

      - name: Run php-cs-fixer tests
        run: vendor/bin/php-cs-fixer fix --dry-run --diff

      - name: Run PHPUnit tests
        run: |
          mkdir -p build/logs/phpunit
          mkdir -p features/var/jwt
          echo $DOCUSIGN_RSA_PRIVATE_KEY > features/var/jwt/docusign.pem
          vendor/bin/phpunit --colors=always --testdox

      - name: Upload test artifacts
          uses: actions/upload-artifact@v1
          with:
            name: phpunit-logs-php${{ matrix.php }}
            path: build/logs/phpunit
