name: CI

on:
  schedule:
    # Every sunday at 02:00
    - cron: 0 2 * * 0
  pull_request:
  push:
    branches:
      - v5

jobs:
  tests:
    name: Tests PHP ${{ matrix.php }} ${{ matrix.dependency }} (Symfony ${{ matrix.symfony }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php:
          - '7.3'
          - '7.4'
          - '8.0'
        symfony:
          - '4.4.*'
          - '5.2.*'
        dependency:
          - ''
          - '--prefer-lowest'
        include:
          - deprecations: false
          - php: '8.0'
            dependency: ''
            symfony: '5.2.*'
            deprecations: true
          - php: '7.4'
            dependency: ''
            symfony: '5.2.*'
            coverage: true
            bootable: true
            deprecations: true
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: pcov
          tools: composer:v2, flex, php-cs-fixer

      - name: Install chromium
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends chromium-browser

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Configure Symfony
        run: composer config extra.symfony.require "${{ matrix.symfony }}"

      - name: Update project dependencies
        run: composer update --no-progress --ansi --prefer-stable ${{ matrix.dependency }}

      - name: Disable deprecations notices for lowest dependencies
        if: matrix.deprecations == false
        run: echo "SYMFONY_DEPRECATIONS_HELPER=weak" >> $GITHUB_ENV

      - name: Bundle is bootable
        if: matrix.bootable
        env:
          SKELETON_VERSION: ${{matrix.symfony}}
        run: |
          composer create-project "symfony/skeleton:${SKELETON_VERSION}" flex
          cd flex
          composer config extra.symfony.allow-contrib true
          composer req gheb/docusign-bundle

      - name: Run php-cs-fixer tests
        run: php-cs-fixer fix --diff --dry-run

      - name: Run phpstan tests
        if: matrix.dependency == '' && matrix.php == '7.4'
        run: vendor/bin/phpstan analyze

      - name: Run phpstan tests lowest
        if: matrix.dependency != '' && matrix.php == '7.4'
        run: vendor/bin/phpstan analyze -c phpstan.neon.lowest.dist

      - name: Prepare PHPUnit tests
        env:
          DOCUSIGN_RSA_PASSPHRASE: ${{ secrets.DOCUSIGN_RSA_PASSPHRASE }}
        run: |
          mkdir -p build/screenshots build/logs/phpunit
          openssl aes-256-cbc -d -a -pbkdf2 -salt -in features/var/jwt/docusign.pem.enc -out features/var/jwt/docusign.pem -pass env:DOCUSIGN_RSA_PASSPHRASE

      - name: Run PHPUnit tests with coverage
        if: matrix.coverage
        env:
          DOCUSIGN_INTEGRATION_KEY: ${{ secrets.DOCUSIGN_INTEGRATION_KEY }}
          DOCUSIGN_USER_GUID: ${{ secrets.DOCUSIGN_USER_GUID }}
          DOCUSIGN_ACCOUNT_ID: ${{ secrets.DOCUSIGN_ACCOUNT_ID }}
          DOCUSIGN_CLICKWRAP_ID: ${{ secrets.DOCUSIGN_CLICKWRAP_ID }}
          DOCUSIGN_API_ACCOUNT_ID: ${{ secrets.DOCUSIGN_API_ACCOUNT_ID }}
          DOCUSIGN_SECRET: ${{ secrets.DOCUSIGN_SECRET }}
          DOCUSIGN_DEFAULT_SIGNER_NAME: ${{ secrets.DOCUSIGN_DEFAULT_SIGNER_NAME }}
          DOCUSIGN_DEFAULT_SIGNER_EMAIL: ${{ secrets.DOCUSIGN_DEFAULT_SIGNER_EMAIL }}
          DOCUSIGN_EMAIL: ${{ secrets.DOCUSIGN_EMAIL }}
          DOCUSIGN_PASSWORD: ${{ secrets.DOCUSIGN_PASSWORD }}
        run: vendor/bin/simple-phpunit --coverage-clover build/logs/phpunit/clover.xml --colors=always --testdox

      - name: Run PHPUnit tests
        if: matrix.coverage == ''
        env:
          DOCUSIGN_INTEGRATION_KEY: ${{ secrets.DOCUSIGN_INTEGRATION_KEY }}
          DOCUSIGN_USER_GUID: ${{ secrets.DOCUSIGN_USER_GUID }}
          DOCUSIGN_ACCOUNT_ID: ${{ secrets.DOCUSIGN_ACCOUNT_ID }}
          DOCUSIGN_CLICKWRAP_ID: ${{ secrets.DOCUSIGN_CLICKWRAP_ID }}
          DOCUSIGN_API_ACCOUNT_ID: ${{ secrets.DOCUSIGN_API_ACCOUNT_ID }}
          DOCUSIGN_SECRET: ${{ secrets.DOCUSIGN_SECRET }}
          DOCUSIGN_DEFAULT_SIGNER_NAME: ${{ secrets.DOCUSIGN_DEFAULT_SIGNER_NAME }}
          DOCUSIGN_DEFAULT_SIGNER_EMAIL: ${{ secrets.DOCUSIGN_DEFAULT_SIGNER_EMAIL }}
          DOCUSIGN_EMAIL: ${{ secrets.DOCUSIGN_EMAIL }}
          DOCUSIGN_PASSWORD: ${{ secrets.DOCUSIGN_PASSWORD }}
        run: vendor/bin/simple-phpunit --colors=always --testdox

      - name: Upload test artifacts
        uses: actions/upload-artifact@v1
        with:
          name: build-php${{ matrix.php }}
          path: build

      - name: Upload coverage results to Codecov
        if: matrix.coverage
        uses: codecov/codecov-action@v1.0.3
        with:
          name: phpunit-php${{ matrix.php }}
          flags: phpunit
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Upload coverage results to Coveralls
        if: matrix.coverage
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          composer global require --prefer-dist --no-progress --ansi cedx/coveralls
          $HOME/.composer/vendor/bin/coveralls build/logs/phpunit/clover.xml
